name: C++ Tests and Coverage

on:
  push:
    paths:
  #      - 'projects/cPlusPlus/**'
  pull_request:
    paths:
#      - 'projects/cPlusPlus/**'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler:
          - { cc: gcc-11, cxx: g++-11 }
          - { cc: gcc-12, cxx: g++-12 }
          - { cc: gcc-13, cxx: g++-13 }
          - { cc: clang-16, cxx: clang++-16 }
          - { cc: clang-17, cxx: clang++-17 }
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y lcov cmake
          sudo apt-get install -y ${{ matrix.compiler.cc }} ${{ matrix.compiler.cxx }}
          if [ "${{ matrix.compiler.cc }}" = "clang-16" ]; then
            sudo apt-get install -y llvm-16
          elif [ "${{ matrix.compiler.cc }}" = "clang-17" ]; then
            sudo apt-get install -y llvm-17
          fi
          pip install gcovr

      - name: Configure CMake
        env:
          CC: ${{ matrix.compiler.cc }}
          CXX: ${{ matrix.compiler.cxx }}
        run: |
          cd projects/cPlusPlus
          cmake -B build -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="--coverage"

      - name: Build
        env:
          CC: ${{ matrix.compiler.cc }}
          CXX: ${{ matrix.compiler.cxx }}
        run: |
          cd projects/cPlusPlus
          if [ "${{ matrix.compiler.cc }}" = "clang-16" ] || [ "${{ matrix.compiler.cc }}" = "clang-17" ]; then
            export CFLAGS="-fprofile-instr-generate -fcoverage-mapping"
            export CXXFLAGS="-fprofile-instr-generate -fcoverage-mapping"
            cmake -B build -S . -DCMAKE_C_COMPILER=${{ matrix.compiler.cc }} -DCMAKE_CXX_COMPILER=${{ matrix.compiler.cxx }} -DCMAKE_C_FLAGS="$CFLAGS" -DCMAKE_CXX_FLAGS="$CXXFLAGS"
            cmake --build build
          else
            cmake --build build
          fi

      - name: Run tests
        run: |
          cd projects/cPlusPlus/build
          if [[ "${{ matrix.compiler.cc }}" == clang-* ]]; then
            export LLVM_PROFILE_FILE="coverage-%p.profraw"
          else
            export LLVM_PROFILE_FILE=""
          fi
          ctest --output-on-failure

      - name: Generate and show detailed coverage
        run: |
          cd projects/cPlusPlus/build
          if [ "${{ matrix.compiler.cc }}" = "clang-16" ]; then
            llvm-profdata-16 merge -sparse coverage-*.profraw -o coverage.profdata
            llvm-cov-16 report ./fsm_tests -instr-profile=coverage.profdata --ignore-filename-regex=".*(gtest|nlohmann|CMakeFiles).*"
          elif [ "${{ matrix.compiler.cc }}" = "clang-17" ]; then
            llvm-profdata-17 merge -sparse coverage-*.profraw -o coverage.profdata
            llvm-cov-17 report ./fsm_tests -instr-profile=coverage.profdata --ignore-filename-regex=".*(gtest|nlohmann|CMakeFiles).*"
          else
            if [ "${{ matrix.compiler.cc }}" = "gcc-11" ]; then
              GCOV_EXEC=gcov-11
            elif [ "${{ matrix.compiler.cc }}" = "gcc-12" ]; then
              GCOV_EXEC=gcov-12
            elif [ "${{ matrix.compiler.cc }}" = "gcc-13" ]; then
              GCOV_EXEC=gcov-13
            fi
            gcovr -r .. --exclude '.*gtest.*' --exclude '.*nlohmann.*' --exclude-directories '.*CMakeFiles.*' --gcov-executable $GCOV_EXEC --txt
          fi

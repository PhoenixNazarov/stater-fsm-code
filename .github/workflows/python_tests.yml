name: Python Tests

on:
  push:
    paths:
#      - 'projects/python/**'
  pull_request:
    paths:
#      - 'projects/python/**'

jobs:
  mypy-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          cd projects/python
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --no-root
          poetry add --dev mypy

      - name: Run mypy
        run: |
          cd projects/python
          poetry run mypy .

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.9', '3.10', '3.11', '3.12', '3.13' ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Install dependencies
        run: |
          cd projects/python
          poetry install --no-root

      - name: Install pytest and pytest-cov
        run: |
          cd projects/python
          poetry add --dev pytest pytest-cov

      - name: Run tests with pytest
        run: |
          cd projects/python
          poetry run pytest --cov --junitxml=junit.xml -o junit_family=legacy

#      - name: Upload coverage reports to Codecov
#        uses: codecov/test-results-action@v1
#        with:
#          files: projects/python/junit.xml
#          token: ${{ secrets.CODECOV_TOKEN }}